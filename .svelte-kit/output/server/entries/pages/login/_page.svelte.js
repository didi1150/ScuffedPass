import { c as create_ssr_component, v as validate_component, a as add_attribute } from "../../../chunks/ssr.js";
import "../../../chunks/client.js";
import { R as RecoveryKey } from "../../../chunks/RecoveryKey.js";
import { M as Modal } from "../../../chunks/Modal.js";
import "../../../chunks/session.js";
import "bcryptjs";
const css = {
  code: ".background.svelte-soprn0.svelte-soprn0.svelte-soprn0{display:flex;align-items:center;justify-content:center;height:100%}.login-box.svelte-soprn0.svelte-soprn0.svelte-soprn0{position:relative;width:400px;height:450px;display:flex;justify-content:center;align-items:center;border-radius:20px;background:transparent;border:2px solid rgba(255, 255, 255, 0.5);backdrop-filter:blur(15px)}h2.svelte-soprn0.svelte-soprn0.svelte-soprn0{font-size:2em;color:white;text-align:center}.input-box.svelte-soprn0.svelte-soprn0.svelte-soprn0{position:relative;width:330px;margin:30px 0px;border-bottom:2px solid white}.input-box.svelte-soprn0 label.svelte-soprn0.svelte-soprn0{position:absolute;top:50%;left:5px;transform:translateY(-50%);font-size:1em;color:white;pointer-events:none;transition:0.5s}.input-box.svelte-soprn0 input.svelte-soprn0:focus~label.svelte-soprn0,.input-box.svelte-soprn0 input.svelte-soprn0:valid~label.svelte-soprn0{top:-5px}.input-box.svelte-soprn0 input.svelte-soprn0.svelte-soprn0{width:85%;height:50px;background:transparent;border:none;outline:none;font-size:1em;color:white;padding:0 0 0 5px}.input-box.svelte-soprn0 svg.svelte-soprn0.svelte-soprn0{position:absolute;right:8px;bottom:0.8em;color:white;font-size:1.2em;line-height:57px}button.svelte-soprn0.svelte-soprn0.svelte-soprn0{width:100%;height:40px;background:white;border:none;border-radius:40px;cursor:pointer;font-size:1em;font-weight:500}.register-link.svelte-soprn0.svelte-soprn0.svelte-soprn0{font-size:0.9em;color:white;text-align:center;margin:25px 0 10px}.error.svelte-soprn0.svelte-soprn0.svelte-soprn0{font-size:0.9em;color:red;text-align:center}.advanced.svelte-soprn0.svelte-soprn0.svelte-soprn0{display:flex;flex-direction:row;justify-content:space-evenly}.advanced.svelte-soprn0 a.svelte-soprn0.svelte-soprn0{color:white;font-weight:bold;text-decoration:none}.register-link.svelte-soprn0 a.svelte-soprn0.svelte-soprn0{color:white;text-decoration:none;font-weight:600}.register-link.svelte-soprn0 a.svelte-soprn0.svelte-soprn0:hover{text-decoration:underline}@media(max-width: 360px){.login-box.svelte-soprn0.svelte-soprn0.svelte-soprn0{width:100%;height:100vh;border:none;border-radius:0}.input-box.svelte-soprn0.svelte-soprn0.svelte-soprn0{width:280px}.advanced.svelte-soprn0.svelte-soprn0.svelte-soprn0{flex-direction:column;align-items:center}.advanced.svelte-soprn0 a.svelte-soprn0.svelte-soprn0{margin-bottom:6px}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { goto, invalidateAll } from \\"$app/navigation\\";\\nimport RecoveryKey from \\"$lib/components/modals/content/RecoveryKey.svelte\\";\\nimport Modal from \\"$lib/components/modals/Modal.svelte\\";\\nimport { axiosInstance } from \\"$lib/interceptors/axios\\";\\nimport {\\n  decryptPrivateKey,\\n  decryptSymmetricKeyWithPrivateKey,\\n  encryptPrivateKey,\\n  encryptPrivateKeyWithRecoverKey,\\n  encryptSymmetricKeyWithPublicKey,\\n  generateIV,\\n  generateKeyPair,\\n  generateRecoveryKey,\\n  generateSymmetricKey,\\n  hashMasterPassword,\\n  uint8ArrayToBase64\\n} from \\"$lib/key\\";\\nimport {\\n  getSalt,\\n  setRefreshToken,\\n  setSymmetricKey,\\n  setToken\\n} from \\"$lib/session\\";\\nlet email = \\"\\", password = \\"\\";\\nlet error = false;\\nlet recoveryKey = \\"\\";\\nlet isOpen = false;\\n$: handleSubmit = async () => {\\n  error = false;\\n  const salt = await getSalt(email);\\n  const { hashPW } = await hashMasterPassword(email, password, salt);\\n  axiosInstance.post(\\"auth/account/authenticate\\", {\\n    email,\\n    password: hashPW\\n  }).then(async (res) => {\\n    try {\\n      if (res.status === 200) {\\n        console.log(res);\\n        setToken(res.data.access_token);\\n        setRefreshToken(res.data.refresh_token);\\n        if (res.data.first_login) {\\n          const { publicKey, privateKey } = await generateKeyPair();\\n          const localRecoveryKey = generateRecoveryKey();\\n          const symmKey = await generateSymmetricKey();\\n          setSymmetricKey(symmKey);\\n          const encryptedSymmetricKey = await encryptSymmetricKeyWithPublicKey(symmKey, publicKey);\\n          const iv = generateIV();\\n          const masterKey = await encryptPrivateKey(\\n            privateKey,\\n            password,\\n            salt,\\n            iv\\n          );\\n          const recoveryEncKey = await encryptPrivateKeyWithRecoverKey(\\n            privateKey,\\n            localRecoveryKey,\\n            salt,\\n            iv\\n          );\\n          if (!masterKey || !recoveryEncKey)\\n            throw Error(\\"Couldn't encrypt private key\\");\\n          else {\\n            const cryptoAttempt = await axiosInstance.post(\\n              \\"/auth/account/user/crypto\\",\\n              {\\n                publicKey,\\n                privateKeyMaster: masterKey,\\n                privateKeyRecovery: recoveryEncKey,\\n                iv: uint8ArrayToBase64(iv),\\n                symmetricKey: encryptedSymmetricKey\\n              }\\n            );\\n            if (cryptoAttempt.status === 200) {\\n              recoveryKey = localRecoveryKey;\\n              isOpen = true;\\n            }\\n          }\\n        } else {\\n          const cryptoResponse = await axiosInstance.post(\\n            \\"/auth/account/user/encryptionKey\\",\\n            { hash: hashPW }\\n          );\\n          const { encryptionKey, privateKeyMaster, iv, salt: salt2 } = cryptoResponse.data;\\n          const decryptedPrivateKey = await decryptPrivateKey(\\n            privateKeyMaster,\\n            password,\\n            salt2,\\n            iv\\n          );\\n          const symmKey = await decryptSymmetricKeyWithPrivateKey(\\n            encryptionKey,\\n            decryptedPrivateKey\\n          );\\n          setSymmetricKey(symmKey);\\n        }\\n        await goto(\\"/\\");\\n      } else {\\n        invalidateAll().then(() => error = true);\\n      }\\n    } catch (error2) {\\n      invalidateAll().then(() => error2 = true);\\n    }\\n  }).catch((reason) => {\\n    invalidateAll().then(() => error = true);\\n  });\\n};\\n<\/script>\\n\\n<Modal bind:isOpen>\\n  <RecoveryKey bind:recoveryKey bind:isOpen></RecoveryKey>\\n</Modal>\\n\\n<div class=\\"background\\">\\n  <div class=\\"login-box\\">\\n    <form on:submit|preventDefault={handleSubmit}>\\n      <h2>Login</h2>\\n      <div class=\\"input-box\\">\\n        <svg\\n          xmlns=\\"http://www.w3.org/2000/svg\\"\\n          width=\\"1em\\"\\n          height=\\"1em\\"\\n          viewBox=\\"0 0 24 24\\"\\n          ><path\\n            fill=\\"white\\"\\n            d=\\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4l-8 5l-8-5V6l8 5l8-5z\\"\\n          /></svg\\n        >\\n        <input\\n          type=\\"text\\"\\n          name=\\"email\\"\\n          id=\\"email\\"\\n          bind:value={email}\\n          required\\n        />\\n        <label for=\\"email\\">Email</label>\\n      </div>\\n      <div class=\\"input-box\\">\\n        <svg\\n          xmlns=\\"http://www.w3.org/2000/svg\\"\\n          width=\\"1em\\"\\n          height=\\"1em\\"\\n          viewBox=\\"0 0 24 24\\"\\n          ><path\\n            fill=\\"white\\"\\n            d=\\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\\"\\n          /></svg\\n        >\\n        <input\\n          type=\\"password\\"\\n          name=\\"password\\"\\n          id=\\"password\\"\\n          bind:value={password}\\n          required\\n        />\\n        <label for=\\"password\\">Password</label>\\n      </div>\\n      <button type=\\"submit\\">Login</button>\\n\\n      <p class=\\"register-link\\">\\n        Don't have an account? <a href=\\"register\\">Register</a>\\n      </p>\\n      <div class=\\"advanced\\">\\n        <a class=\\"lock\\" href=\\"/requestlock\\">Lock account</a>\\n        <a class=\\"forgot\\" href=\\"/resetpw\\">Forgot Password?</a>\\n      </div>\\n      {#if error}\\n        <p class=\\"error\\">Please try again</p>\\n      {/if}\\n    </form>\\n  </div>\\n</div>\\n\\n<style>\\n  .background {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n  }\\n\\n  .login-box {\\n    position: relative;\\n    width: 400px;\\n    height: 450px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    border-radius: 20px;\\n    background: transparent;\\n    border: 2px solid rgba(255, 255, 255, 0.5);\\n    backdrop-filter: blur(15px);\\n  }\\n\\n  h2 {\\n    font-size: 2em;\\n    color: white;\\n    text-align: center;\\n  }\\n\\n  .input-box {\\n    position: relative;\\n    width: 330px;\\n    margin: 30px 0px;\\n    border-bottom: 2px solid white;\\n  }\\n\\n  .input-box label {\\n    position: absolute;\\n    top: 50%;\\n    left: 5px;\\n    transform: translateY(-50%);\\n    font-size: 1em;\\n    color: white;\\n    pointer-events: none;\\n    transition: 0.5s;\\n  }\\n\\n  .input-box input:focus ~ label,\\n  .input-box input:valid ~ label {\\n    top: -5px;\\n  }\\n\\n  .input-box input {\\n    width: 85%;\\n    height: 50px;\\n    background: transparent;\\n    border: none;\\n    outline: none;\\n    font-size: 1em;\\n    color: white;\\n    padding: 0 0 0 5px;\\n  }\\n  .input-box svg {\\n    position: absolute;\\n    right: 8px;\\n    bottom: 0.8em;\\n    color: white;\\n    font-size: 1.2em;\\n    line-height: 57px;\\n  }\\n\\n  button {\\n    width: 100%;\\n    height: 40px;\\n    background: white;\\n    border: none;\\n    border-radius: 40px;\\n    cursor: pointer;\\n    font-size: 1em;\\n    font-weight: 500;\\n  }\\n\\n  .register-link {\\n    font-size: 0.9em;\\n    color: white;\\n    text-align: center;\\n    margin: 25px 0 10px;\\n  }\\n  .error {\\n    font-size: 0.9em;\\n    color: red;\\n    text-align: center;\\n  }\\n\\n  .advanced {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-evenly;\\n  }\\n\\n  .advanced a {\\n    color: white;\\n    font-weight: bold;\\n    text-decoration: none;\\n  }\\n\\n  .register-link a {\\n    color: white;\\n    text-decoration: none;\\n    font-weight: 600;\\n  }\\n\\n  .register-link a:hover {\\n    text-decoration: underline;\\n  }\\n\\n  @media (max-width: 360px) {\\n    .login-box {\\n      width: 100%;\\n      height: 100vh;\\n      border: none;\\n      border-radius: 0;\\n    }\\n    .input-box {\\n      width: 280px;\\n    }\\n    .advanced {\\n      flex-direction: column;\\n      align-items: center;\\n    }\\n\\n    .advanced a {\\n      margin-bottom: 6px;\\n    }\\n  }\\n</style>\\n"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let email = "", password = "";
  let recoveryKey = "";
  let isOpen = false;
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `${validate_component(Modal, "Modal").$$render(
      $$result,
      { isOpen },
      {
        isOpen: ($$value) => {
          isOpen = $$value;
          $$settled = false;
        }
      },
      {
        default: () => {
          return `${validate_component(RecoveryKey, "RecoveryKey").$$render(
            $$result,
            { recoveryKey, isOpen },
            {
              recoveryKey: ($$value) => {
                recoveryKey = $$value;
                $$settled = false;
              },
              isOpen: ($$value) => {
                isOpen = $$value;
                $$settled = false;
              }
            },
            {}
          )}`;
        }
      }
    )} <div class="background svelte-soprn0"><div class="login-box svelte-soprn0"><form><h2 class="svelte-soprn0" data-svelte-h="svelte-bhb3ah">Login</h2> <div class="input-box svelte-soprn0"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" class="svelte-soprn0"><path fill="white" d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4l-8 5l-8-5V6l8 5l8-5z"></path></svg> <input type="text" name="email" id="email" required class="svelte-soprn0"${add_attribute("value", email, 0)}> <label for="email" class="svelte-soprn0" data-svelte-h="svelte-1p9d3fm">Email</label></div> <div class="input-box svelte-soprn0"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" class="svelte-soprn0"><path fill="white" d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z"></path></svg> <input type="password" name="password" id="password" required class="svelte-soprn0"${add_attribute("value", password, 0)}> <label for="password" class="svelte-soprn0" data-svelte-h="svelte-pepa0a">Password</label></div> <button type="submit" class="svelte-soprn0" data-svelte-h="svelte-1yamoz0">Login</button> <p class="register-link svelte-soprn0" data-svelte-h="svelte-11gzarx">Don&#39;t have an account? <a href="register" class="svelte-soprn0">Register</a></p> <div class="advanced svelte-soprn0" data-svelte-h="svelte-19tmutw"><a class="lock svelte-soprn0" href="/requestlock">Lock account</a> <a class="forgot svelte-soprn0" href="/resetpw">Forgot Password?</a></div> ${``}</form></div> </div>`;
  } while (!$$settled);
  return $$rendered;
});
export {
  Page as default
};
